name: Build and tests

on:
  push:
    branches:
    - "**"
    tags-ignore:
    - "*"

jobs:
  server:
    name: Backend build and integration tests
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore NuGet packages
      run: dotnet restore
    - name: Build
      run: dotnet build -c Release --no-restore
    - name: Repare test environment
      run: |
        set -x

        # Launch and prepare MySQL server  
        sudo systemctl start mysql.service
        dotnet run -c Release --no-build --project server/src/Korga.Server -- database create --populate
    - name: Test
      run: dotnet test -c Release --no-build --verbosity normal

  webapp:
    name: Frontend build
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: Setup NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    - name: Restore NPM packages
      run: npm install
      working-directory: webapp
    - name: Build
      run: npm run build
      working-directory: webapp

  docker:
    name: Docker build
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/daniel-lerch/korga
        tags: |
          type=ref,event=branch
          type=ref,event=pr
    - name: Login to GitHub Container Registry
      if: ${{ github.event_name != 'pull_request' }}
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
